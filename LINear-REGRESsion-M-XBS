100 !**********************
110 !**  LIN-REGRES 1.0  **
120 !**    ROBERTLM78    **
130 !**     JULY 2014    **
140 !**********************
150 ON WARNING NEXT
160 OPTION BASE 1 :: DIM SET(100,2)
170 !******************
180 !** SET DISPLAY  **
190 !******************
195 CALL GRAPHICS(1)
200 CALL CLEAR :: FOR C=1 TO 12 :: CALL COLOR(C,16,2) :: NEXT C
210 CALL COLOR(0,5,1) :: CALL SCREEN(5)
220 U$="0000FFFF00000000" :: CALL CHAR(128,U$) :: CALL COLOR(13,12,2)
230 !******************
240 !** SPLASHSCREEN **
250 !******************
260 DISPLAY AT(1,7):"LIN-REGRES 1.0-M" :: CALL HCHAR(2,9,128,16)
270 DISPLAY AT(4,1):"LIN-REGRES creates a linear"
280 DISPLAY AT(5,1):"regression from data points"
290 DISPLAY AT(6,1):"that you enter or load from"
300 DISPLAY AT(7,1):"a DIS/VAR 80 file."
310 DISPLAY AT(10,1):"You may enter or load up"
320 DISPLAY AT(11,1):"to 100 points."
330 CALL KEY(0,K,S) :: IF S=0 THEN 330
340 CALL CLR :: CALL HCHAR(2,1,128,32)
350 !*****************
360 !**  MAIN MENU  **
370 !*****************
380 CALL TITCLR :: DISPLAY AT(1,7):"LIN-REGRES MENU"
390 DISPLAY AT(4,3):"1. Enter/Load data points"
400 DISPLAY AT(6,3):"2. View data points"
410 DISPLAY AT(8,3):"3. Perform regression"
420 DISPLAY AT(10,3):"4. Quit to XB"
430 !DISPLAY AT(12,3):"5. Quit to FWeb" !*** DEPRICATED ON GENEVE ***  
435 DISPLAY AT(22,9):DATE$ :: DISPLAY AT(23,9):TIME$
440 CALL KEY(0,K,S) :: IF S=0 THEN 440
450 IF K=49 THEN 480 :: IF K=50 THEN 730 :: IF K=51 THEN 860
460 IF K=52 THEN 1380 :: IF K=53 THEN 1390
470 IF K<49 OR K>53 THEN 440
480 !*********************
490 !** ENTER DATA PNTS **
500 !*********************
510 CALL TITCLR :: CALL CLR :: DISPLAY AT(1,7):"Enter Data Points"
520 DISPLAY AT(4,1):"Load file(Y/N)?"
530 CALL KEY(0,K,S) :: IF S=0 THEN 530
540 IF K=89 THEN 720 :: IF K=78 THEN 560
550 GOTO 530
560 DISPLAY AT(4,1):"Enter # points:"
570 DISPLAY AT(7,1):"Pair #:"
580 DISPLAY AT(9,1):"Enter X value:"
590 DISPLAY AT(10,1):"Enter Y value:"
600 ACCEPT AT(4,17) VALIDATE(DIGIT):NUM$ :: IF NUM$="" THEN 600
610 N=VAL(NUM$) :: IF N<1 OR N>100 THEN 600
620 FOR I=1 TO N
630 DISPLAY AT(7,9):I
640 ACCEPT AT(9,16) VALIDATE(NUMERIC,"-") SIZE(12):X$ :: IF X$="" THEN 640
650 ACCEPT AT(10,16) VALIDATE(NUMERIC,"-") SIZE(12):Y$ :: IF Y$="" THEN 650
660 SET(I,1)=VAL(X$) :: SET(I,2)=VAL(Y$)
670 CALL HCHAR(10,17,32,12)
680 NEXT I
690 CALL HCHAR(9,17,32,12) :: DISPLAY AT(16,1):"Finished - press any key."
700 CALL KEY(0,K,S) :: IF S=0 THEN 700
710 CALL CLR :: GOTO 350
720 CALL FLD(N,SET(,),F$) :: CALL CLR :: GOTO 350
730 !*******************
740 !**  VIEW POINTS  **
750 !*******************
760 CALL TITCLR :: CALL CLR :: DISPLAY AT(1,8):"View Data Points"
770 DISPLAY AT(3,1):"X" :: DISPLAY AT(3,15):"Y"
780 R=3 :: FOR I=1 TO N :: R=R+1
790 DISPLAY AT(R,1):SET(I,1) :: DISPLAY AT(R,15):SET(I,2)
800 IF R=23 THEN GOSUB 840
810 NEXT I
820 CALL KEY(0,K,S) :: IF S=0 THEN 820 :: CALL CLR :: GOTO 350
830 !*** RESET ROW ***
840 R=3 :: CALL KEY(0,K,S) :: IF S=0 THEN 840
850 CALL CLR :: DISPLAY AT(3,1):"X" :: DISPLAY AT(3,15):"Y" :: RETURN
860 !********************
870 !** CALCULATE LINE **
880 !********************
890 CALL TITCLR :: CALL CLR :: DISPLAY AT(1,7):"Calculate Line"
900 !** PART 1 MEANS **
910 SUMX=0 :: SUMY=0
920 FOR I=1 TO N :: DISPLAY AT(22,1):I
930 SUMX=SUMX+SET(I,1) :: SUMY=SUMY+SET(I,2)
940 NEXT I
950 MEANX=SUMX/N :: MEANY=SUMY/N
960 !** PART 2 STDS **
970 SX=0 :: SY=0
980 FOR I=1 TO N :: DISPLAY AT(22,1):I
990 SX=SX+(SET(I,1)-MEANX)^2 :: SY=SY+(SET(I,2)-MEANY)^2
1000 NEXT I
1010 STDX=(1/(N-1)*SX)^0.5 :: STDY=(1/(N-1)*SY)^0.5
1020 !** PART 3 CORREL. **
1030 CORR=0
1040 FOR I=1 TO N :: DISPLAY AT(22,1):I
1050 CORR=CORR+((SET(I,1)-MEANX)/STDX*(SET(I,2)-MEANY)/STDY)
1060 NEXT I
1070 CORR=CORR/(N-1)
1080 !** PART 4 FINAL STEPS *
1090 M=CORR*STDY/STDX :: B=MEANY-M*MEANX
1100 IF B<0 THEN SIGN$="-"
1110 IF B>=0 THEN SIGN$="+"
1120 B=ABS(B)
1130 LINE$="Y = "&STR$(M)&"*X "&SIGN$&" "&STR$(B)
1140 DISPLAY AT(4,1):"The regressed line is:":LINE$
1150 DISPLAY AT(8,1):"Correlation: ";CORR
1160 DISPLAY AT(10,1):"Std Dev X: ";STDX
1170 DISPLAY AT(11,1):"Std Dev Y: ";STDY
1180 DISPLAY AT(13,1):"Mean X: ";MEANX
1190 DISPLAY AT(14,1):"Mean Y: ";MEANY
1200 DISPLAY AT(16,1):"Export to file(Y/N)?"
1210 CALL KEY(0,K,S) :: IF S=0 THEN 1210
1220 IF K=89 THEN 1270 :: IF K=78 THEN 1240
1230 GOTO 1210
1240 DISPLAY AT(19,1):"Finished- press 'BACK'"
1250 CALL KEY(0,K,S) :: IF S=0 THEN 1250
1255 IF K<>15 THEN 1250
1260 CALL CLR :: GOTO 350
1270 CALL CLR :: CALL FSV(N,SET(,),F$)
1280 PRINT #2:" ":LINE$:" "
1290 PRINT #2:"Correlation: ";CORR
1300 PRINT #2:"Std. dev. X: ";STDX,"Std. dev. Y: ";STDY
1310 PRINT #2:"Mean X: ";MEANX,"Mean Y: ";MEANY
1320 CLOSE #2 :: DISPLAY AT(15,1):"Finished- press any key"
1330 CALL KEY(0,K,S) :: IF S=0 THEN 1330
1340 CALL CLR :: GOTO 1140
1350 !*******************
1360 !** QUIT LIN-REG  **
1370 !*******************
1380 CALL CLEAR :: CALL GRAPHICS(4) :: CALL SCREEN(5) :: END
1390 !CALL CLEAR : : RUN "HDS1.FWB.LOAD" !*** DEPRICATED ON GENEVE  *** 
1400 !********************
1410 !** ERROR ROUTINES **
1420 !********************
1430 CALL CLR :: RETURN 1540
1440 CALL CLR :: RETURN 1860
1450 !******************
1460 !** SUB ROUTINES **
1470 !******************
1480 SUB TITCLR :: CALL HCHAR(1,1,32,32) :: SUBEND
1490 SUB CLR :: CALL HCHAR(3,1,32,704) :: SUBEND
1500 !****** SUB ******
1510 !*** FILE LOAD ***
1520 !*****************
1530 SUB FLD(N,SET(,),F$)
1540 DISPLAY AT(6,1):"Enter a full path and":"filename:"
1550 ACCEPT AT(8,1):FN1$ :: IF FN1$="" THEN 1550
1560 ACCEPT AT(9,1):FN2$ :: F$=FN1$&FN2$
1570 DISPLAY AT(11,1):"Enter # points in file:"
1580 ACCEPT AT(12,2) VALIDATE(DIGIT):NUM$ :: IF NUM$="" THEN 1580
1590 N=VAL(NUM$) :: IF N<1 OR N>100 THEN 1580
1600 ON ERROR 1430
1610 OPEN #2:F$,SEQUENTIAL,INPUT,DISPLAY,VARIABLE 80
1620 FOR J=1 TO N
1630 DISPLAY AT(22,1):J
1640 INPUT #2:A$ :: A$=A$&" "
1650 LX=0 :: FOR I=1 TO 40
1660 DISPLAY AT(23,1):I
1670 IF ASC(SEG$(A$,I,1))=32 THEN 1690
1680 LX=LX+1 :: NEXT I
1690 SP=0 :: FOR I=LX+1 TO 80
1700 DISPLAY AT(23,1):I
1710 IF ASC(SEG$(A$,I,1))<>32 THEN 1730
1720 SP=SP+1 :: NEXT I
1730 LY=0 :: YST=LX+SP+1 :: FOR I=YST TO 80
1740 DISPLAY AT(23,1):I
1750 IF ASC(SEG$(A$,I,1))=32 THEN 1770
1760 LY=LY+1 :: NEXT I
1770 SET(J,1)=VAL(SEG$(A$,1,LX)) :: SET(J,2)=VAL(SEG$(A$,YST,LY))
1780 NEXT J
1790 CLOSE #2 :: DISPLAY AT(15,1):"Finished- press any key"
1800 CALL KEY(0,K,S) :: IF S=0 THEN 1800
1810 SUBEND
1820 !****** SUB ******
1830 !*** FILE SAVE ***
1840 !*****************
1850 SUB FSV(N,SET(,),F$)
1860 DISPLAY AT(6,1):"Enter a full path and":"filename:"
1870 DISPLAY AT(8,1):SEG$(F$,1,28):SEG$(F$,29,56)
1880 ACCEPT AT(8,1) SIZE(-28):FN1$ :: IF FN1$="" THEN 1880
1890 ACCEPT AT(9,1) SIZE(-28):FN2$ :: F$=FN1$&FN2$
1900 ON ERROR 1440
1910 OPEN #2:F$,SEQUENTIAL,OUTPUT,DISPLAY,VARIABLE 80
1920 FOR J=1 TO N
1930 DISPLAY AT(22,1):J
1940 PRINT #2:SET(J,1);" ";SET(J,2)
1950 NEXT J
1960 SUBEND

